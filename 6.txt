import Prog1Tools.IOTools;
import java.util.*;

public class QuickSortAlgorithm {
    public static int exchanges;
                   
    public static void main(String[] args) {
        int array[] = {12,9,4,99,120,1,3,10,23,45,75,69,31,88,101,14,29,91,2,0,77};  
        int i;
        
        exchanges = 0;
        
        quickSort(array, 0, 20);
        
        System.out.print("Sorted Array: ");
        for (i=0; i<=20; i++) {
            System.out.print(" " + array[i]); 
        }    
        System.out.println(" ");
        System.out.println("Exchanges: " + exchanges);
    }

    //
    // Partition the array into smaller sub-arrays as part of the divide and 
    // conquer strategy of this sort algorithm.
    //
    public static int partition(int arr[], int left, int right) 
    { 
        int i = left, j = right; 
        int tmp; 
        int pivot = arr[(left + right) / 2]; 
     
        while (i <= j) { 
              while (arr[i] < pivot) 
                    i++; 
              while (arr[j] > pivot) 
                    j--; 
              if (i <= j) {
                    exchanges++; 
                    tmp = arr[i]; 
                    arr[i] = arr[j]; 
                    arr[j] = tmp; 
                    i++; 
                    j--; 
              } 
        };     
        return i; 
    } 

    public static void quickSort(int arr[], int left, int right) { 
        int index = partition(arr, left, right); 
        if (left < index - 1) 
              quickSort(arr, left, index - 1); 
        if (index < right) 
              quickSort(arr, index, right); 
    }
}
